{"version":3,"sources":["jquery.happyloader.js"],"names":["factory","define","amd","jQuery","$","Plugin","element","options","this","$element","$body","urls","imageCounter","extend","defaults","data","_defaults","_name","happyloader","version","VERSION","show","hide","init","bindMethods","bindEventListeners","onWindowResize","each","renderBar","bind","fn","context","apply","arguments","addEventListener","type","callback","on","happyloaderOverlay","happyloaderBar","happyloaderImages","happyloaderInformer","debug","prototype","render","findImagesElements","addClass","appendTo","css","html","percentage","parseInt","length","windowWidth","window","width","stop","animate","proxy","removeLoader","promise","done","remove","opacity","console","log","draw","elements","find","add","elementsSize","size","i","findImage","createImages","tag","tagName","toLowerCase","url","is","attr","findUrl","indexOf","push","replace","a","split","len","loadImage","completeImageLoad","urlsSize","image"],"mappings":"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","file":"jquery.happyloader.min.js","sourcesContent":["/* ========================================================================\r\n * happyloaders: jquery.happyloader.js v1.0.0\r\n * ========================================================================\r\n * Copyright 2013 Happycms.ru\r\n * Licensed under the MIT license.\r\n * http://www.opensource.org/licenses/mit-license.php\r\n * ======================================================================== \r\n */\r\n\r\n(function (factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        // AMD. Register as an anonymous module.\r\n        define('happyloader', ['jquery'], factory);\r\n    } else {\r\n        // Browser globals\r\n        factory(jQuery);\r\n    }\r\n}(function ($) {\r\n    \r\n    var VERSION = '1.0.0';\r\n    \r\n    // Create the defaults once\r\n    var happyloader = 'happyloader',\r\n        defaults = {\r\n            happyloaderOverlay : 'happy-loader-overlay',\r\n            happyloaderBar : 'happy-loader-bar',\r\n            happyloaderImages : 'happyloader-images',\r\n            happyloaderInformer : 'happy-loader-informer',\r\n            debug : false,\r\n            callback: function() {},\r\n        };\r\n\r\n    function Plugin( element, options ) {\r\n        this.element = element;\r\n        this.$element = $(this.element);\r\n        this.$body = $('body');\r\n        this.urls = []\r\n        this.imageCounter = 0\r\n\r\n        this.options = $.extend( {\r\n        }, defaults, options, $(this.element).data('happyloader-options')) ;\r\n        \r\n        this._defaults = defaults;\r\n        this._name = happyloader;\r\n        \r\n        this.version = VERSION;\r\n        this.show = this.show;\r\n        this.hide = this.hide;\r\n        \r\n        this.init();\r\n        this.bindMethods();\r\n        this.bindEventListeners();\r\n    }\r\n\r\n    Plugin.prototype = {\r\n        init: function() {\r\n            this.render();  \r\n            this.findImagesElements();  \r\n        },\r\n\r\n        render: function(){ \r\n            $('<div/>').addClass(this.options.happyloaderOverlay).appendTo('body');\r\n            $('<div/>').addClass(this.options.happyloaderImages).css('display', 'none').appendTo('body');\r\n            $('<div/>').addClass(this.options.happyloaderBar).appendTo('.'+this.options.happyloaderOverlay);\r\n            $('<div/>').addClass(this.options.happyloaderInformer).html('0%').appendTo('.'+this.options.happyloaderOverlay);\r\n        },\r\n        \r\n        renderBar: function(){\r\n            var percentage = parseInt(this.imageCounter*100/this.urls.length);\r\n            var windowWidth = $(window).width();\r\n            var width = parseInt((percentage * windowWidth)/100);\r\n            $('.'+this.options.happyloaderBar).stop(true, true).animate({'width' : width}, 300, $.proxy(function(){\r\n                $('.'+this.options.happyloaderInformer).html(percentage+'%');    \r\n            }, this));\r\n        },\r\n        \r\n        removeLoader: function(){\r\n            $('.'+this.options.happyloaderBar).promise().done($.proxy(function() {\r\n                $('.'+this.options.happyloaderImages).remove();\r\n                $('.'+this.options.happyloaderOverlay).animate({'opacity' : 0}, 300, $.proxy(function(){\r\n                    $('.'+this.options.happyloaderOverlay).remove();    \r\n                    \r\n                    if(this.options.debug == true){\r\n                        console.log('end loader');    \r\n                    }\r\n                }, this));\r\n                \r\n                this.options.callback();\r\n            }, this));\r\n        },\r\n        \r\n        draw: function() {\r\n\r\n        },\r\n        \r\n        findImagesElements: function(){\r\n            var elements = this.$element.find('*:not(script)');\r\n            elements = elements.add(this.$element);\r\n            var elementsSize = elements.size();\r\n            \r\n            for(var i = 0; i < elementsSize; i++){\r\n                this.findImage(elements[i]);  \r\n            }     \r\n            \r\n            if(this.urls.length <= 0){\r\n                this.removeLoader();\r\n                return true;    \r\n            }\r\n            \r\n            this.createImages(this.urls);\r\n            \r\n            if(this.options.debug == true){\r\n                console.log('end find images', this.urls);    \r\n            }\r\n             \r\n        },\r\n        \r\n        findImage: function(element){\r\n            var element = $(element);\r\n            var tag = element[0].tagName.toLowerCase();\r\n            var url = '';\r\n            \r\n            if(element.css('background-image') == 'none' && element.is('[src]') == true && tag == 'img' ){\r\n                url = element.attr('src');\r\n                findUrl = url.toLowerCase();\r\n\r\n                if(findUrl.indexOf('jpg') + 1 > 0 || findUrl.indexOf('jpeg') + 1 > 0 || findUrl.indexOf('png') + 1 > 0 || findUrl.indexOf('gif') + 1 > 0){\r\n                    this.urls.push(url);\r\n                    return true;     \r\n                }\r\n            }\r\n            \r\n            if(element.css('background-image') !== 'none'){\r\n                url = element.css('background-image'); \r\n                \r\n                if(url.indexOf('gradient') + 1 > 0){\r\n                    return false;\r\n                }\r\n                \r\n                url = url.replace(/url\\(\\\"/g, \"\");\r\n                url = url.replace(/url\\(/g, \"\");\r\n                url = url.replace(/\\\"\\)/g, \"\");\r\n                url = url.replace(/\\)/g, \"\");\r\n                \r\n                /* проверка на multi images */\r\n                if(url.indexOf(',') + 1 > 0){\r\n                    var a = url.split(',');\r\n                    \r\n                    for(var i = 0, len = a.length; i < len; i++){\r\n                        this.urls.push(a[i].replace(/^\\%20|\\%20$/g, ''));    \r\n                    }\r\n                    \r\n                    return true;\r\n                }\r\n\r\n                this.urls.push(url); \r\n                return true;  \r\n            }\r\n        },\r\n        \r\n        loadImage: function(element){\r\n            element.on('load error', $.proxy(function () {\r\n                 this.completeImageLoad(element);\r\n\r\n                 if(this.options.debug == true){\r\n                    console.log('load image');    \r\n                 }\r\n            }, this));           \r\n        },\r\n        \r\n        completeImageLoad: function(element){\r\n            this.imageCounter++;\r\n            var imageSize = this.urls.length;\r\n            \r\n            this.renderBar(this.imageCounter);\r\n            \r\n            if(this.imageCounter >= this.urls.length){\r\n                this.removeLoader();    \r\n            }    \r\n        },\r\n        \r\n        createImages: function(){\r\n            var urlsSize = this.urls.length;\r\n            var image = '';\r\n            \r\n            for(var i = 0; i < urlsSize; i++){\r\n                image = $('<img />');\r\n                image.attr('src', this.urls[i]).appendTo('.'+this.options.happyloaderImages);\r\n                this.loadImage(image);    \r\n            }\r\n        },\r\n        \r\n        bindMethods: function(){\r\n        },\r\n        \r\n        bindEventListeners: function(){\r\n        }\r\n    };\r\n\r\n    $.fn[happyloader] = function ( options ) {\r\n        // global events\r\n        onWindowResize = bind(onWindowResize, this); \r\n        addEventListener($(window), 'load', onWindowResize); \r\n        addEventListener($(window), 'resize', onWindowResize);\r\n        \r\n        return this.each(function () {\r\n            if (!$.data(this, \"plugin_\" + happyloader)) {\r\n                $.data(this, \"plugin_\" + happyloader,\r\n                new Plugin( this, options ));\r\n            }\r\n        });\r\n    };\r\n\r\n    function onWindowResize(e){\r\n        this.each(function () {\r\n            $.data(this, \"plugin_\" + happyloader).renderBar();  \r\n        });\r\n    }\r\n    \r\n    function bind(fn, context) {\r\n        return function() {\r\n            return fn.apply(context, arguments);\r\n        };\r\n    };\r\n        \r\n    function addEventListener(element, type, callback) {\r\n        element.on(type, callback);\r\n    };\r\n        \r\n    function removeEventListener(element, type, callback) {\r\n        element.off(type, callback);\r\n    };\r\n}));"],"sourceRoot":"/source/"}